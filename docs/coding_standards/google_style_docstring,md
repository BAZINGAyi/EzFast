# Google Style 函数文档规范

Google Style Docstring 是一种跨语言、高可读性的函数文档风格，适用于 Python、Java、Go、TypeScript 等多种语言，便于 IDE、自动化文档工具解析。

---

## 1. 基本结构

```python
def function_name(param1, param2=None):
    """一句话概述函数的功能。

    详细描述（可选）。说明函数的用途、工作原理、特殊注意事项等，
    不涉及具体实现细节。

    Args:
        param1 (type): 参数1说明。
        param2 (type, optional): 参数2说明，注明默认值或可选性。

    Returns:
        return_type: 返回值说明。

    Raises:
        ExceptionType: 触发条件说明。
        AnotherException: 触发条件说明。

    Example:
        >>> function_name("test")
        结果示例
    """
```

---

## 2. 书写规则

### 2.1 总体要求
- **概述**部分必须简明扼要，首字母大写，末尾加句号。
- 若有详细描述，空一行再写，且描述应避免实现细节。
- 使用**英文标点**，即使是中文文档。
- 类型写在括号内，如 `(int)`、`(str)`、`(list[str])`。

---

### 2.2 参数说明（Args）
- 按照函数签名顺序列出参数。
- 每个参数占一行：  
  ```
  param_name (type): 描述
  ```
- 可选参数需标注 `optional`，并注明默认值：
  ```
  param2 (float, optional): 折扣率，默认 0.1。
  ```
- 对于复杂类型，尽量使用标准类型注解，例如：
  - `list[int]`、`dict[str, Any]`、`tuple[int, float]`

---

### 2.3 返回值说明（Returns）
- 如果返回值有类型，用 `(type)` 说明：
  ```
  Returns:
      float: 折扣后的价格。
  ```
- 如果返回值可能是多种类型，分条说明：
  ```
  Returns:
      float: 计算成功时返回价格。
      None: 输入不合法时返回。
  ```

---

### 2.4 异常说明（Raises）
- 只列出可能抛出的异常类型及触发条件。
- 多个异常按行列出：
  ```
  Raises:
      ValueError: 当输入参数不合法时抛出。
      IOError: 文件读取失败时抛出。
  ```

---

### 2.5 示例（Example）
- 使用 `>>>` 表示可运行示例（类似 Python REPL）。
- 可以有多行示例：
  ```python
  Example:
      >>> calculate_discount(100)
      90.0
      >>> calculate_discount(200, 0.25)
      150.0
  ```

---

## 3. 完整示例

```python
def calculate_discount(price: float, discount_rate: float = 0.1) -> float:
    """计算折扣后的价格。

    根据原价和折扣率，返回折扣后的价格。默认折扣率为 0.1（即 9 折）。

    Args:
        price (float): 原价，必须为非负数。
        discount_rate (float, optional): 折扣率，范围 0~1，默认 0.1。

    Returns:
        float: 折扣后的价格，四舍五入保留两位小数。

    Raises:
        ValueError: 当价格为负数或折扣率不在 0~1 时抛出。

    Example:
        >>> calculate_discount(100)
        90.0
        >>> calculate_discount(200, 0.25)
        150.0
    """
    if price < 0:
        raise ValueError("价格不能为负数")
    if not 0 <= discount_rate <= 1:
        raise ValueError("折扣率必须在 0~1 之间")

    return round(price * (1 - discount_rate), 2)
```
